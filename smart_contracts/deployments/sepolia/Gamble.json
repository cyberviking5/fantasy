{
  "address": "0x119073BD77860dFDBf4536733A5F793a2FFD927C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_entryFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserEntered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserLost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserWon",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "enter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gamblers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "gamblersToAmountBet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMatchStatus",
      "outputs": [
        {
          "internalType": "enum Gamble.MatchStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserEntryStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserResult",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setMatchStatusCompleted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setMatchStatusNotStarted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setMatchStatusStarted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "setResultStatusLive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "setResultStatusLost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "setResultStatusWon",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "settleTeamResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "hasEntered",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x43e955d81be8090c2916617fdb0a5658afdcaf24b3a395f6f8fa8308f665c1e6",
  "receipt": {
    "to": null,
    "from": "0xc3c00e57421D8A75dadbD7b1469B94F44f4d6588",
    "contractAddress": "0x119073BD77860dFDBf4536733A5F793a2FFD927C",
    "transactionIndex": 42,
    "gasUsed": "1211487",
    "logsBloom": "0x
    "blockHash": "0x5d76f9236a1f824b1e57b13f0b91667ea689d9c377457e1a06d8c89806610f80",
    "transactionHash": "0x43e955d81be8090c2916617fdb0a5658afdcaf24b3a395f6f8fa8308f665c1e6",
    "logs": [],
    "blockNumber": 4113699,
    "cumulativeGasUsed": "11935900",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "1000000000000000000"
  ],
  "numDeployments": 9,
  "solcInputHash": "4ce3dbaeb26c93452a30bd888f7af3d1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_entryFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserLost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserWon\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gamblers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gamblersToAmountBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMatchStatus\",\"outputs\":[{\"internalType\":\"enum Gamble.MatchStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserEntryStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserResult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setMatchStatusCompleted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setMatchStatusNotStarted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setMatchStatusStarted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setResultStatusLive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setResultStatusLost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setResultStatusWon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"settleTeamResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasEntered\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gamble.sol\":\"Gamble\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Gamble.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract Gamble {\\n    address private immutable owner;\\n    uint256 public immutable entryFee;\\n    enum MatchStatus {\\n        NotStarted,\\n        Started,\\n        Completed\\n    }\\n    MatchStatus private matchStatus;\\n\\n    struct User {\\n        bool hasEntered;\\n        uint256 result; // 0 = Loss, 1 = Win, 2 = Live\\n    }\\n\\n    mapping(address => User) public users;\\n    mapping(address => uint256) public gamblersToAmountBet;\\n    address[] public gamblers;\\n\\n    event UserEntered(address user, uint256 amount);\\n    event UserWon(address user, uint256 amount);\\n    event UserLost(address user, uint256 amount);\\n\\n    constructor(uint256 _entryFee) {\\n        owner = msg.sender;\\n        entryFee = _entryFee;\\n        matchStatus = MatchStatus.NotStarted;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only the owner can call this function\\\");\\n        _;\\n    }\\n\\n    function setMatchStatus(address _user) private {\\n        if (users[_user].result == 1 || users[_user].result == 2) {\\n            matchStatus = MatchStatus.Completed;\\n        } else {\\n            matchStatus = MatchStatus.Started;\\n        }\\n    }\\n\\n    function setResultStatusWon(address user ) public{\\n            users[user].result=1;\\n    }\\n\\n    function setResultStatusLost(address user ) public{\\n            users[user].result=0;\\n    }\\n    function setResultStatusLive(address user ) public{\\n            users[user].result=2;\\n    }\\n\\n    function enter() public payable {\\n        require(msg.value >= entryFee/10**18, \\\"Insufficient entry fee\\\");\\n        require(matchStatus == MatchStatus.NotStarted , \\\"Match already started\\\");\\n        require(!users[msg.sender].hasEntered, \\\"You have already entered\\\");\\n\\n        gamblersToAmountBet[msg.sender] = msg.value;\\n        gamblers.push(msg.sender);\\n        users[msg.sender].hasEntered = true;\\n        emit UserEntered(msg.sender, msg.value);\\n    }\\n\\n    function setMatchStatusNotStarted() public  {\\n        matchStatus = MatchStatus.NotStarted;\\n    }\\n\\n    function setMatchStatusStarted() public  {\\n        matchStatus = MatchStatus.Started;\\n    }\\n\\n    function setMatchStatusCompleted() public  {\\n        matchStatus = MatchStatus.Completed;\\n    }\\n\\n    function settleTeamResult(address user) public {\\n        require(users[user].hasEntered, \\\"User has not entered\\\");\\n        require(matchStatus == MatchStatus.Completed, \\\"Match not completed\\\");\\n\\n        if (users[user].result == 1) {\\n            uint256 winnings = entryFee +\\n                (gamblersToAmountBet[user] / gamblers.length);\\n            payable(user).transfer(winnings);\\n            emit UserWon(user, winnings);\\n        } else if (users[user].result == 0) {\\n            uint256 lossAmount = entryFee;\\n            emit UserLost(user, lossAmount);\\n        }\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        require(\\n            matchStatus == MatchStatus.Completed,\\n            \\\"Wait for match completion\\\"\\n        );\\n        payable(owner).transfer(address(this).balance);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return owner;\\n    }\\n\\n    function getEntryFee() public view returns (uint256) {\\n        return entryFee;\\n    }\\n\\n    function getMatchStatus() public view returns (MatchStatus) {\\n        return matchStatus;\\n    }\\n\\n    function getUserEntryStatus(address user) public view returns (bool) {\\n        return users[user].hasEntered;\\n    }\\n\\n    function getUserResult(address user) public view returns (uint256) {\\n        return users[user].result;\\n    }\\n\\n    function getBalance() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n}\\n\",\"keccak256\":\"0x5a42d5967c9dc18869b45ac84c42ce9746a4ed88cc21773092f75b7931cd08c8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b506040516200168a3803806200168a8339818101604052810190620000379190620000e7565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508060a0818152505060008060006101000a81548160ff021916908360028111156200009b576200009a62000119565b5b02179055505062000148565b600080fd5b6000819050919050565b620000c181620000ac565b8114620000cd57600080fd5b50565b600081519050620000e181620000b6565b92915050565b6000602082840312156200010057620000ff620000a7565b5b60006200011084828501620000d0565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60805160a0516114f2620001986000396000818161042e015281816107110152818161081001528181610b7d0152610bc2015260008181610872015281816109730152610ada01526114f26000f3fe6080604052600436106101145760003560e01c806367237d95116100a0578063a87430ba11610064578063a87430ba14610365578063b6af1b1b146103a3578063e586a4f0146103cc578063e8779bf1146103f7578063e97dcb621461042257610114565b806367237d95146102a6578063697a0723146102bd5780637a53326f146102d45780637fb82bdf14610311578063893d20e81461033a57610114565b80632aaf9c66116100e75780632aaf9c66146101af5780632d9f7a08146101ec57806337e61d6f14610229578063381ac076146102665780633ccfd60b1461028f57610114565b8063072ea61c1461011957806312065fe01461014457806316fe01501461016f5780631c0fcfdb14610186575b600080fd5b34801561012557600080fd5b5061012e61042c565b60405161013b9190610e86565b60405180910390f35b34801561015057600080fd5b50610159610450565b6040516101669190610e86565b60405180910390f35b34801561017b57600080fd5b50610184610458565b005b34801561019257600080fd5b506101ad60048036038101906101a89190610f04565b610484565b005b3480156101bb57600080fd5b506101d660048036038101906101d19190610f5d565b6104cf565b6040516101e39190610f99565b60405180910390f35b3480156101f857600080fd5b50610213600480360381019061020e9190610f04565b61050e565b6040516102209190610e86565b60405180910390f35b34801561023557600080fd5b50610250600480360381019061024b9190610f04565b610526565b60405161025d9190610e86565b60405180910390f35b34801561027257600080fd5b5061028d60048036038101906102889190610f04565b610572565b005b34801561029b57600080fd5b506102a4610870565b005b3480156102b257600080fd5b506102bb6109da565b005b3480156102c957600080fd5b506102d2610a06565b005b3480156102e057600080fd5b506102fb60048036038101906102f69190610f04565b610a32565b6040516103089190610fcf565b60405180910390f35b34801561031d57600080fd5b5061033860048036038101906103339190610f04565b610a8b565b005b34801561034657600080fd5b5061034f610ad6565b60405161035c9190610f99565b60405180910390f35b34801561037157600080fd5b5061038c60048036038101906103879190610f04565b610afe565b60405161039a929190610fea565b60405180910390f35b3480156103af57600080fd5b506103ca60048036038101906103c59190610f04565b610b2f565b005b3480156103d857600080fd5b506103e1610b79565b6040516103ee9190610e86565b60405180910390f35b34801561040357600080fd5b5061040c610ba1565b604051610419919061108a565b60405180910390f35b61042a610bb7565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b600047905090565b60026000806101000a81548160ff0219169083600281111561047d5761047c611013565b5b0217905550565b6002600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b600381815481106104df57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610601576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f890611102565b60405180910390fd5b60028081111561061457610613611013565b5b60008054906101000a900460ff16600281111561063457610633611013565b5b14610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b9061116e565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154036107c2576000600380549050600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461070f91906111ec565b7f000000000000000000000000000000000000000000000000000000000000000061073a919061121d565b90508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610782573d6000803e3d6000fd5b507f2dc4fba839a9fe8e3b5e9d22ce43d01c6a4445ed0d08a40f010bacb02a97747382826040516107b4929190611251565b60405180910390a15061086d565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101540361086c5760007f000000000000000000000000000000000000000000000000000000000000000090507f1314fbd9b3f625c600265ea995805937eb1f31ad6be05ea00a535eca47c000688282604051610862929190611251565b60405180910390a1505b5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f5906112ec565b60405180910390fd5b60028081111561091157610910611013565b5b60008054906101000a900460ff16600281111561093157610930611013565b5b14610971576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096890611358565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156109d7573d6000803e3d6000fd5b50565b60008060006101000a81548160ff021916908360028111156109ff576109fe611013565b5b0217905550565b60016000806101000a81548160ff02191690836002811115610a2b57610a2a611013565b5b0217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154905082565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900460ff16905090565b670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000610beb91906111ec565b341015610c2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c24906113c4565b60405180910390fd5b60006002811115610c4157610c40611013565b5b60008054906101000a900460ff166002811115610c6157610c60611013565b5b14610ca1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9890611430565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615610d31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d289061149c565b60405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507fb662f0beeb38e2aa790755858e25ee4edac93ec1ed278a0d1d28f86721a646b33334604051610e63929190611251565b60405180910390a1565b6000819050919050565b610e8081610e6d565b82525050565b6000602082019050610e9b6000830184610e77565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ed182610ea6565b9050919050565b610ee181610ec6565b8114610eec57600080fd5b50565b600081359050610efe81610ed8565b92915050565b600060208284031215610f1a57610f19610ea1565b5b6000610f2884828501610eef565b91505092915050565b610f3a81610e6d565b8114610f4557600080fd5b50565b600081359050610f5781610f31565b92915050565b600060208284031215610f7357610f72610ea1565b5b6000610f8184828501610f48565b91505092915050565b610f9381610ec6565b82525050565b6000602082019050610fae6000830184610f8a565b92915050565b60008115159050919050565b610fc981610fb4565b82525050565b6000602082019050610fe46000830184610fc0565b92915050565b6000604082019050610fff6000830185610fc0565b61100c6020830184610e77565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061105357611052611013565b5b50565b600081905061106482611042565b919050565b600061107482611056565b9050919050565b61108481611069565b82525050565b600060208201905061109f600083018461107b565b92915050565b600082825260208201905092915050565b7f5573657220686173206e6f7420656e7465726564000000000000000000000000600082015250565b60006110ec6014836110a5565b91506110f7826110b6565b602082019050919050565b6000602082019050818103600083015261111b816110df565b9050919050565b7f4d61746368206e6f7420636f6d706c6574656400000000000000000000000000600082015250565b60006111586013836110a5565b915061116382611122565b602082019050919050565b600060208201905081810360008301526111878161114b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111f782610e6d565b915061120283610e6d565b9250826112125761121161118e565b5b828204905092915050565b600061122882610e6d565b915061123383610e6d565b925082820190508082111561124b5761124a6111bd565b5b92915050565b60006040820190506112666000830185610f8a565b6112736020830184610e77565b9392505050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b60006112d66025836110a5565b91506112e18261127a565b604082019050919050565b60006020820190508181036000830152611305816112c9565b9050919050565b7f5761697420666f72206d6174636820636f6d706c6574696f6e00000000000000600082015250565b60006113426019836110a5565b915061134d8261130c565b602082019050919050565b6000602082019050818103600083015261137181611335565b9050919050565b7f496e73756666696369656e7420656e7472792066656500000000000000000000600082015250565b60006113ae6016836110a5565b91506113b982611378565b602082019050919050565b600060208201905081810360008301526113dd816113a1565b9050919050565b7f4d6174636820616c726561647920737461727465640000000000000000000000600082015250565b600061141a6015836110a5565b9150611425826113e4565b602082019050919050565b600060208201905081810360008301526114498161140d565b9050919050565b7f596f75206861766520616c726561647920656e74657265640000000000000000600082015250565b60006114866018836110a5565b915061149182611450565b602082019050919050565b600060208201905081810360008301526114b581611479565b905091905056fea2646970667358221220285a95d4d336c7a09f31dad31e30b644fdab5e93e6c896bfad5d7399c59f75e364736f6c63430008120033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12,
        "contract": "contracts/Gamble.sol:Gamble",
        "label": "matchStatus",
        "offset": 0,
        "slot": "0",
        "type": "t_enum(MatchStatus)9"
      },
      {
        "astId": 22,
        "contract": "contracts/Gamble.sol:Gamble",
        "label": "users",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(User)17_storage)"
      },
      {
        "astId": 26,
        "contract": "contracts/Gamble.sol:Gamble",
        "label": "gamblersToAmountBet",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 29,
        "contract": "contracts/Gamble.sol:Gamble",
        "label": "gamblers",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(MatchStatus)9": {
        "encoding": "inplace",
        "label": "enum Gamble.MatchStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(User)17_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Gamble.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)17_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(User)17_storage": {
        "encoding": "inplace",
        "label": "struct Gamble.User",
        "members": [
          {
            "astId": 14,
            "contract": "contracts/Gamble.sol:Gamble",
            "label": "hasEntered",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 16,
            "contract": "contracts/Gamble.sol:Gamble",
            "label": "result",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}