{
  "address": "0xE58a2E7f9Bf1C5f5392fe3859aFCcE90b6bD9a13",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_entryFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserEntered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserLost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserWon",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "enter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gamblers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "gamblersToAmountBet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserEntryStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settleTeamResultLoss",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settleTeamResultWon",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "hasEntered",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0a51552d53f165a225d4529256b1ff32d96e0336a9de25755a66a8c88e430e07",
  "receipt": {
    "to": null,
    "from": "0xc3c00e57421D8A75dadbD7b1469B94F44f4d6588",
    "contractAddress": "0xE58a2E7f9Bf1C5f5392fe3859aFCcE90b6bD9a13",
    "transactionIndex": 20,
    "gasUsed": "876617",
    "logsBloom": "0x
    "blockHash": "0x80f3835f8408c3476942172d5f6fd6f4fcbaf6ffbec4853ee26d24a40ce75659",
    "transactionHash": "0x0a51552d53f165a225d4529256b1ff32d96e0336a9de25755a66a8c88e430e07",
    "logs": [],
    "blockNumber": 4117780,
    "cumulativeGasUsed": "4329416",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "1000000000000000000"
  ],
  "numDeployments": 14,
  "solcInputHash": "432df23a91689461a9abb558a6ec00e8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_entryFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserLost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserWon\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gamblers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gamblersToAmountBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserEntryStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleTeamResultLoss\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleTeamResultWon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasEntered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gamble.sol\":\"Gamble\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Gamble.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract Gamble {\\r\\n    address private immutable owner;\\r\\n    uint256 public immutable entryFee;\\r\\n    // enum MatchStatus {\\r\\n    //     NotStarted,\\r\\n    //     Started,\\r\\n    //     Completed\\r\\n    // }\\r\\n    // MatchStatus private matchStatus;\\r\\n\\r\\n    struct User {\\r\\n        bool hasEntered;\\r\\n    }\\r\\n\\r\\n    mapping(address => User) public users;\\r\\n    mapping(address => uint256) public gamblersToAmountBet;\\r\\n    address[] public gamblers;\\r\\n\\r\\n    event UserEntered(address user, uint256 amount);\\r\\n    event UserWon(address user, uint256 amount);\\r\\n    event UserLost(address user, uint256 amount);\\r\\n\\r\\n    constructor(uint256 _entryFee) {\\r\\n        owner = msg.sender;\\r\\n        entryFee = _entryFee;\\r\\n        // matchStatus = MatchStatus.NotStarted;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"Only the owner can call this function\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // function setMatchStatus(address _user) private {\\r\\n    //     if (users[_user].result == 1 || users[_user].result == 2) {\\r\\n    //         matchStatus = MatchStatus.Completed;\\r\\n    //     } else {\\r\\n    //         matchStatus = MatchStatus.Started;\\r\\n    //     }\\r\\n    // }\\r\\n\\r\\n    // function setResultStatusWon(address user ) public{\\r\\n    //         users[user].result=1;\\r\\n    // }\\r\\n\\r\\n    // function setResultStatusLost(address user ) public{\\r\\n    //         users[user].result=0;\\r\\n    // }\\r\\n    // function setResultStatusLive(address user ) public{\\r\\n    //         users[user].result=2;\\r\\n    // }\\r\\n\\r\\n    function enter() public payable {\\r\\n        require(msg.value >= entryFee/10**18, \\\"Insufficient entry fee\\\");\\r\\n        // require(matchStatus == MatchStatus.NotStarted , \\\"Match already started\\\");\\r\\n        require(!users[msg.sender].hasEntered, \\\"You have already entered\\\");\\r\\n\\r\\n        gamblersToAmountBet[msg.sender] = msg.value;\\r\\n        gamblers.push(msg.sender);\\r\\n        users[msg.sender].hasEntered = true;\\r\\n        emit UserEntered(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    // function setMatchStatusNotStarted() public  {\\r\\n    //     matchStatus = MatchStatus.NotStarted;\\r\\n    // }\\r\\n\\r\\n    // function setMatchStatusStarted() public  {\\r\\n    //     matchStatus = MatchStatus.Started;\\r\\n    // }\\r\\n\\r\\n    // function setMatchStatusCompleted() public  {\\r\\n    //     matchStatus = MatchStatus.Completed;\\r\\n    // }\\r\\n\\r\\n    function settleTeamResultWon() public {\\r\\n                 require(users[msg.sender].hasEntered, \\\"User has not entered\\\");\\r\\n                 uint256 winnings = entryFee +\\r\\n                 (gamblersToAmountBet[msg.sender] / gamblers.length);\\r\\n                 payable(msg.sender).transfer(winnings);\\r\\n                 users[msg.sender].hasEntered=false;\\r\\n                 emit UserWon(msg.sender, winnings);\\r\\n       \\r\\n    }\\r\\n\\r\\n    function settleTeamResultLoss() public {\\r\\n             require(users[msg.sender].hasEntered, \\\"User has not entered\\\");\\r\\n             uint256 lossAmount = entryFee;\\r\\n             users[msg.sender].hasEntered=false;\\r\\n             emit UserLost(msg.sender, lossAmount);\\r\\n    }\\r\\n\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        payable(owner).transfer(address(this).balance);\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return owner;\\r\\n    }\\r\\n\\r\\n    function getEntryFee() public view returns (uint256) {\\r\\n        return entryFee;\\r\\n    }\\r\\n\\r\\n    // function getMatchStatus() public view returns (MatchStatus) {\\r\\n    //     return matchStatus;\\r\\n    // }\\r\\n\\r\\n    function getUserEntryStatus(address user) public view returns (bool) {\\r\\n        return users[user].hasEntered;\\r\\n    }\\r\\n\\r\\n    // function getUserResult(address user) public view returns (uint256) {\\r\\n    //     return users[user].result;\\r\\n    // }\\r\\n\\r\\n    function getBalance() public view returns (uint256) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n}\\r\\n\",\"keccak256\":\"0xbf5afea7ba7defe78ac1f4097875183fe99cebf924b1d67bb0ab4cf26a9af8fc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100ab5760003560e01c80637a53326f116100645780637a53326f146101b5578063893d20e8146101f2578063a87430ba1461021d578063e586a4f01461025a578063e97dcb6214610285578063fc079c271461028f576100b2565b8063072ea61c146100b757806312065fe0146100e25780632aaf9c661461010d5780632d9f7a081461014a5780633ccfd60b14610187578063608ca7cf1461019e576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100cc6102a6565b6040516100d99190610a80565b60405180910390f35b3480156100ee57600080fd5b506100f76102ca565b6040516101049190610a80565b60405180910390f35b34801561011957600080fd5b50610134600480360381019061012f9190610acc565b6102d2565b6040516101419190610b3a565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c9190610b81565b610311565b60405161017e9190610a80565b60405180910390f35b34801561019357600080fd5b5061019c610329565b005b3480156101aa57600080fd5b506101b3610420565b005b3480156101c157600080fd5b506101dc60048036038101906101d79190610b81565b610569565b6040516101e99190610bc9565b60405180910390f35b3480156101fe57600080fd5b506102076105c1565b6040516102149190610b3a565b60405180910390f35b34801561022957600080fd5b50610244600480360381019061023f9190610b81565b6105e9565b6040516102519190610bc9565b60405180910390f35b34801561026657600080fd5b5061026f610614565b60405161027c9190610a80565b60405180910390f35b61028d61063c565b005b34801561029b57600080fd5b506102a461087d565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b600047905090565b600281815481106102e257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ae90610c67565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561041d573d6000803e3d6000fd5b50565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166104ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a590610cd3565b60405180910390fd5b60007f0000000000000000000000000000000000000000000000000000000000000000905060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507f1314fbd9b3f625c600265ea995805937eb1f31ad6be05ea00a535eca47c00068338260405161055e929190610cf3565b60405180910390a150565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b670de0b6b3a76400007f00000000000000000000000000000000000000000000000000000000000000006106709190610d7a565b3410156106b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a990610df7565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615610741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073890610e63565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507fb662f0beeb38e2aa790755858e25ee4edac93ec1ed278a0d1d28f86721a646b33334604051610873929190610cf3565b60405180910390a1565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661090b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090290610cd3565b60405180910390fd5b6000600280549050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461095d9190610d7a565b7f00000000000000000000000000000000000000000000000000000000000000006109889190610e83565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156109d0573d6000803e3d6000fd5b5060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507f2dc4fba839a9fe8e3b5e9d22ce43d01c6a4445ed0d08a40f010bacb02a9774733382604051610a5c929190610cf3565b60405180910390a150565b6000819050919050565b610a7a81610a67565b82525050565b6000602082019050610a956000830184610a71565b92915050565b600080fd5b610aa981610a67565b8114610ab457600080fd5b50565b600081359050610ac681610aa0565b92915050565b600060208284031215610ae257610ae1610a9b565b5b6000610af084828501610ab7565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2482610af9565b9050919050565b610b3481610b19565b82525050565b6000602082019050610b4f6000830184610b2b565b92915050565b610b5e81610b19565b8114610b6957600080fd5b50565b600081359050610b7b81610b55565b92915050565b600060208284031215610b9757610b96610a9b565b5b6000610ba584828501610b6c565b91505092915050565b60008115159050919050565b610bc381610bae565b82525050565b6000602082019050610bde6000830184610bba565b92915050565b600082825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b6000610c51602583610be4565b9150610c5c82610bf5565b604082019050919050565b60006020820190508181036000830152610c8081610c44565b9050919050565b7f5573657220686173206e6f7420656e7465726564000000000000000000000000600082015250565b6000610cbd601483610be4565b9150610cc882610c87565b602082019050919050565b60006020820190508181036000830152610cec81610cb0565b9050919050565b6000604082019050610d086000830185610b2b565b610d156020830184610a71565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d8582610a67565b9150610d9083610a67565b925082610da057610d9f610d1c565b5b828204905092915050565b7f496e73756666696369656e7420656e7472792066656500000000000000000000600082015250565b6000610de1601683610be4565b9150610dec82610dab565b602082019050919050565b60006020820190508181036000830152610e1081610dd4565b9050919050565b7f596f75206861766520616c726561647920656e74657265640000000000000000600082015250565b6000610e4d601883610be4565b9150610e5882610e17565b602082019050919050565b60006020820190508181036000830152610e7c81610e40565b9050919050565b6000610e8e82610a67565b9150610e9983610a67565b9250828201905080821115610eb157610eb0610d4b565b5b9291505056fea2646970667358221220a88ed86d21d2d3d3001fd0f2cf014a468c49780485c4ad9ce1c5a024882c130e64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2986,
        "contract": "contracts/Gamble.sol:Gamble",
        "label": "users",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(User)2981_storage)"
      },
      {
        "astId": 2990,
        "contract": "contracts/Gamble.sol:Gamble",
        "label": "gamblersToAmountBet",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2993,
        "contract": "contracts/Gamble.sol:Gamble",
        "label": "gamblers",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(User)2981_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Gamble.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)2981_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(User)2981_storage": {
        "encoding": "inplace",
        "label": "struct Gamble.User",
        "members": [
          {
            "astId": 2980,
            "contract": "contracts/Gamble.sol:Gamble",
            "label": "hasEntered",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}