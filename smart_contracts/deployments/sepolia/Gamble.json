{
  "address": "0xBE58eB6C6145d128183fd1383B9250cAe1980881",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_entryFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserEntered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserLost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserWon",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "enter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gamblers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "gamblersToAmountBet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntryFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserEntryStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "setResultStatusLive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "setResultStatusLost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "setResultStatusWon",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "settleTeamResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "hasEntered",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x99f363e5d0b86e1eb6cee394803ba03f8c4b4e6bf6356f99b2e5958e97e2d4b9",
  "receipt": {
    "to": null,
    "from": "0xc3c00e57421D8A75dadbD7b1469B94F44f4d6588",
    "contractAddress": "0xBE58eB6C6145d128183fd1383B9250cAe1980881",
    "transactionIndex": 18,
    "gasUsed": "954124",
    "logsBloom": "0x
    "blockHash": "0x7b2e9dbc7a706815ad308446e97136507894879b111cc7bf835542f296d9ed52",
    "transactionHash": "0x99f363e5d0b86e1eb6cee394803ba03f8c4b4e6bf6356f99b2e5958e97e2d4b9",
    "logs": [],
    "blockNumber": 4101423,
    "cumulativeGasUsed": "10225624",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "1000000000000000000"
  ],
  "numDeployments": 5,
  "solcInputHash": "3b67000037a5583cd1d52b0452005c54",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_entryFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserLost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserWon\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gamblers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gamblersToAmountBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntryFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserEntryStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setResultStatusLive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setResultStatusLost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setResultStatusWon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"settleTeamResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasEntered\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gamble.sol\":\"Gamble\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Gamble.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract Gamble {\\r\\n    address private immutable owner;\\r\\n    uint256 public immutable entryFee;\\r\\n    enum TeamResult { NotSettled, Win, Loss }\\r\\n    function setResultStatusWon(address user ) public{\\r\\n            users[user].result=1;\\r\\n    }\\r\\n\\r\\n    function setResultStatusLost(address user ) public{\\r\\n            users[user].result=0;\\r\\n    }\\r\\n    function setResultStatusLive(address user ) public{\\r\\n            users[user].result=2;\\r\\n    }\\r\\n\\r\\n\\r\\n    struct User {\\r\\n        bool hasEntered;\\r\\n        uint result;\\r\\n    }\\r\\n    mapping(address => User) public users;\\r\\n    mapping(address => uint256) public gamblersToAmountBet;\\r\\n    address[] public gamblers;\\r\\n\\r\\n    event UserEntered(address user,uint256 amount);\\r\\n    event UserWon(address user, uint256 amount);\\r\\n    event UserLost(address user, uint256 amount);\\r\\n\\r\\n    constructor(uint256 _entryFee) {\\r\\n        owner = msg.sender;\\r\\n        entryFee=_entryFee;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"Only the owner can call this function\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // function setEntryFee(uint256 _entryFee) public onlyOwner {\\r\\n    //     entryFee = _entryFee;\\r\\n    // }\\r\\n\\r\\n    function enter() public payable {\\r\\n        require(msg.value >= (entryFee / 10**18), \\\"Insufficient entry fee\\\");\\r\\n        require(!users[msg.sender].hasEntered, \\\"You have already entered\\\");\\r\\n        gamblersToAmountBet[msg.sender] = msg.value;\\r\\n        gamblers.push(msg.sender);\\r\\n        users[msg.sender].hasEntered = true;\\r\\n        emit UserEntered(msg.sender,msg.value);\\r\\n    }\\r\\n\\r\\n    function getUserEntryStatus(address _user) public view returns (bool) {\\r\\n        return users[_user].hasEntered;\\r\\n    }\\r\\n\\r\\n    function settleTeamResult(address _user) public  {\\r\\n        require(users[_user].hasEntered, \\\"User has not entered\\\");\\r\\n            require(users[_user].result == 2, \\\"Result already settled\\\");\\r\\n        // users[_user].result = _result;\\r\\n        if (users[_user].result == 1) {\\r\\n            uint256 winnings = entryFee * 2;\\r\\n            payable(_user).transfer(winnings);\\r\\n            emit UserWon(_user, winnings);\\r\\n        } else if (users[_user].result == 0) {\\r\\n            uint256 lossAmount = entryFee;\\r\\n            emit UserLost(_user, lossAmount);\\r\\n        }\\r\\n    }\\r\\n    function withdraw() public onlyOwner {\\r\\n        payable(owner).transfer(address(this).balance);\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns(address)\\r\\n    {\\r\\n        return owner;\\r\\n    }\\r\\n    function getEntryFees() public view returns(uint256)\\r\\n    {\\r\\n        return entryFee;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd7c68f260179567f93982910aca5c51508f004b3aac72731222a5aa75cbcc868\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b506040516200118238038062001182833981810160405281019061003491906100b1565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508060a08181525050506100de565b600080fd5b6000819050919050565b61008e8161007b565b811461009957600080fd5b50565b6000815190506100ab81610085565b92915050565b6000602082840312156100c7576100c6610076565b5b60006100d58482850161009c565b91505092915050565b60805160a0516110546200012e600039600081816103040152818161052801528181610626015281816108c601526108f501526000818161068801528181610716015261082301526110546000f3fe6080604052600436106100c25760003560e01c80637a53326f1161007f578063a87430ba11610059578063a87430ba14610266578063b6af1b1b146102a4578063e262e402146102cd578063e97dcb62146102f8576100c2565b80637a53326f146101d55780637fb82bdf14610212578063893d20e81461023b576100c2565b8063072ea61c146100c75780631c0fcfdb146100f25780632aaf9c661461011b5780632d9f7a0814610158578063381ac076146101955780633ccfd60b146101be575b600080fd5b3480156100d357600080fd5b506100dc610302565b6040516100e99190610b44565b60405180910390f35b3480156100fe57600080fd5b5061011960048036038101906101149190610bc2565b610326565b005b34801561012757600080fd5b50610142600480360381019061013d9190610c1b565b610370565b60405161014f9190610c57565b60405180910390f35b34801561016457600080fd5b5061017f600480360381019061017a9190610bc2565b6103af565b60405161018c9190610b44565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b79190610bc2565b6103c7565b005b3480156101ca57600080fd5b506101d3610686565b005b3480156101e157600080fd5b506101fc60048036038101906101f79190610bc2565b61077d565b6040516102099190610c8d565b60405180910390f35b34801561021e57600080fd5b5061023960048036038101906102349190610bc2565b6107d5565b005b34801561024757600080fd5b5061025061081f565b60405161025d9190610c57565b60405180910390f35b34801561027257600080fd5b5061028d60048036038101906102889190610bc2565b610847565b60405161029b929190610ca8565b60405180910390f35b3480156102b057600080fd5b506102cb60048036038101906102c69190610bc2565b610878565b005b3480156102d957600080fd5b506102e26108c2565b6040516102ef9190610b44565b60405180910390f35b6103006108ea565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b60026000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b6002818154811061038057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610455576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044c90610d2e565b60405180910390fd5b60026000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154146104d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d090610d9a565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154036105d957600060027f00000000000000000000000000000000000000000000000000000000000000006105519190610de9565b90508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610599573d6000803e3d6000fd5b507f2dc4fba839a9fe8e3b5e9d22ce43d01c6a4445ed0d08a40f010bacb02a97747382826040516105cb929190610e2b565b60405180910390a150610683565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154036106825760007f000000000000000000000000000000000000000000000000000000000000000090507f1314fbd9b3f625c600265ea995805937eb1f31ad6be05ea00a535eca47c000688282604051610678929190610e2b565b60405180910390a1505b5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b90610ec6565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561077a573d6000803e3d6000fd5b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154905082565b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b670de0b6b3a76400007f000000000000000000000000000000000000000000000000000000000000000061091e9190610f15565b341015610960576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095790610f92565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16156109ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e690610ffe565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507fb662f0beeb38e2aa790755858e25ee4edac93ec1ed278a0d1d28f86721a646b33334604051610b21929190610e2b565b60405180910390a1565b6000819050919050565b610b3e81610b2b565b82525050565b6000602082019050610b596000830184610b35565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8f82610b64565b9050919050565b610b9f81610b84565b8114610baa57600080fd5b50565b600081359050610bbc81610b96565b92915050565b600060208284031215610bd857610bd7610b5f565b5b6000610be684828501610bad565b91505092915050565b610bf881610b2b565b8114610c0357600080fd5b50565b600081359050610c1581610bef565b92915050565b600060208284031215610c3157610c30610b5f565b5b6000610c3f84828501610c06565b91505092915050565b610c5181610b84565b82525050565b6000602082019050610c6c6000830184610c48565b92915050565b60008115159050919050565b610c8781610c72565b82525050565b6000602082019050610ca26000830184610c7e565b92915050565b6000604082019050610cbd6000830185610c7e565b610cca6020830184610b35565b9392505050565b600082825260208201905092915050565b7f5573657220686173206e6f7420656e7465726564000000000000000000000000600082015250565b6000610d18601483610cd1565b9150610d2382610ce2565b602082019050919050565b60006020820190508181036000830152610d4781610d0b565b9050919050565b7f526573756c7420616c726561647920736574746c656400000000000000000000600082015250565b6000610d84601683610cd1565b9150610d8f82610d4e565b602082019050919050565b60006020820190508181036000830152610db381610d77565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df482610b2b565b9150610dff83610b2b565b9250828202610e0d81610b2b565b91508282048414831517610e2457610e23610dba565b5b5092915050565b6000604082019050610e406000830185610c48565b610e4d6020830184610b35565b9392505050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b6000610eb0602583610cd1565b9150610ebb82610e54565b604082019050919050565b60006020820190508181036000830152610edf81610ea3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f2082610b2b565b9150610f2b83610b2b565b925082610f3b57610f3a610ee6565b5b828204905092915050565b7f496e73756666696369656e7420656e7472792066656500000000000000000000600082015250565b6000610f7c601683610cd1565b9150610f8782610f46565b602082019050919050565b60006020820190508181036000830152610fab81610f6f565b9050919050565b7f596f75206861766520616c726561647920656e74657265640000000000000000600082015250565b6000610fe8601883610cd1565b9150610ff382610fb2565b602082019050919050565b6000602082019050818103600083015261101781610fdb565b905091905056fea2646970667358221220fe76e7251d6e7d1632409cf5902cca2f40e3445ac7e1a3007c6cc16ed5bc9f0264736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c80637a53326f1161007f578063a87430ba11610059578063a87430ba14610266578063b6af1b1b146102a4578063e262e402146102cd578063e97dcb62146102f8576100c2565b80637a53326f146101d55780637fb82bdf14610212578063893d20e81461023b576100c2565b8063072ea61c146100c75780631c0fcfdb146100f25780632aaf9c661461011b5780632d9f7a0814610158578063381ac076146101955780633ccfd60b146101be575b600080fd5b3480156100d357600080fd5b506100dc610302565b6040516100e99190610b44565b60405180910390f35b3480156100fe57600080fd5b5061011960048036038101906101149190610bc2565b610326565b005b34801561012757600080fd5b50610142600480360381019061013d9190610c1b565b610370565b60405161014f9190610c57565b60405180910390f35b34801561016457600080fd5b5061017f600480360381019061017a9190610bc2565b6103af565b60405161018c9190610b44565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b79190610bc2565b6103c7565b005b3480156101ca57600080fd5b506101d3610686565b005b3480156101e157600080fd5b506101fc60048036038101906101f79190610bc2565b61077d565b6040516102099190610c8d565b60405180910390f35b34801561021e57600080fd5b5061023960048036038101906102349190610bc2565b6107d5565b005b34801561024757600080fd5b5061025061081f565b60405161025d9190610c57565b60405180910390f35b34801561027257600080fd5b5061028d60048036038101906102889190610bc2565b610847565b60405161029b929190610ca8565b60405180910390f35b3480156102b057600080fd5b506102cb60048036038101906102c69190610bc2565b610878565b005b3480156102d957600080fd5b506102e26108c2565b6040516102ef9190610b44565b60405180910390f35b6103006108ea565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b60026000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b6002818154811061038057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610455576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044c90610d2e565b60405180910390fd5b60026000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154146104d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d090610d9a565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154036105d957600060027f00000000000000000000000000000000000000000000000000000000000000006105519190610de9565b90508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610599573d6000803e3d6000fd5b507f2dc4fba839a9fe8e3b5e9d22ce43d01c6a4445ed0d08a40f010bacb02a97747382826040516105cb929190610e2b565b60405180910390a150610683565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154036106825760007f000000000000000000000000000000000000000000000000000000000000000090507f1314fbd9b3f625c600265ea995805937eb1f31ad6be05ea00a535eca47c000688282604051610678929190610e2b565b60405180910390a1505b5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b90610ec6565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561077a573d6000803e3d6000fd5b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154905082565b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b670de0b6b3a76400007f000000000000000000000000000000000000000000000000000000000000000061091e9190610f15565b341015610960576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095790610f92565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16156109ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e690610ffe565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507fb662f0beeb38e2aa790755858e25ee4edac93ec1ed278a0d1d28f86721a646b33334604051610b21929190610e2b565b60405180910390a1565b6000819050919050565b610b3e81610b2b565b82525050565b6000602082019050610b596000830184610b35565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8f82610b64565b9050919050565b610b9f81610b84565b8114610baa57600080fd5b50565b600081359050610bbc81610b96565b92915050565b600060208284031215610bd857610bd7610b5f565b5b6000610be684828501610bad565b91505092915050565b610bf881610b2b565b8114610c0357600080fd5b50565b600081359050610c1581610bef565b92915050565b600060208284031215610c3157610c30610b5f565b5b6000610c3f84828501610c06565b91505092915050565b610c5181610b84565b82525050565b6000602082019050610c6c6000830184610c48565b92915050565b60008115159050919050565b610c8781610c72565b82525050565b6000602082019050610ca26000830184610c7e565b92915050565b6000604082019050610cbd6000830185610c7e565b610cca6020830184610b35565b9392505050565b600082825260208201905092915050565b7f5573657220686173206e6f7420656e7465726564000000000000000000000000600082015250565b6000610d18601483610cd1565b9150610d2382610ce2565b602082019050919050565b60006020820190508181036000830152610d4781610d0b565b9050919050565b7f526573756c7420616c726561647920736574746c656400000000000000000000600082015250565b6000610d84601683610cd1565b9150610d8f82610d4e565b602082019050919050565b60006020820190508181036000830152610db381610d77565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df482610b2b565b9150610dff83610b2b565b9250828202610e0d81610b2b565b91508282048414831517610e2457610e23610dba565b5b5092915050565b6000604082019050610e406000830185610c48565b610e4d6020830184610b35565b9392505050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b6000610eb0602583610cd1565b9150610ebb82610e54565b604082019050919050565b60006020820190508181036000830152610edf81610ea3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f2082610b2b565b9150610f2b83610b2b565b925082610f3b57610f3a610ee6565b5b828204905092915050565b7f496e73756666696369656e7420656e7472792066656500000000000000000000600082015250565b6000610f7c601683610cd1565b9150610f8782610f46565b602082019050919050565b60006020820190508181036000830152610fab81610f6f565b9050919050565b7f596f75206861766520616c726561647920656e74657265640000000000000000600082015250565b6000610fe8601883610cd1565b9150610ff382610fb2565b602082019050919050565b6000602082019050818103600083015261101781610fdb565b905091905056fea2646970667358221220fe76e7251d6e7d1632409cf5902cca2f40e3445ac7e1a3007c6cc16ed5bc9f0264736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 117,
        "contract": "contracts/Gamble.sol:Gamble",
        "label": "users",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(User)112_storage)"
      },
      {
        "astId": 121,
        "contract": "contracts/Gamble.sol:Gamble",
        "label": "gamblersToAmountBet",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 124,
        "contract": "contracts/Gamble.sol:Gamble",
        "label": "gamblers",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(User)112_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Gamble.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)112_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(User)112_storage": {
        "encoding": "inplace",
        "label": "struct Gamble.User",
        "members": [
          {
            "astId": 109,
            "contract": "contracts/Gamble.sol:Gamble",
            "label": "hasEntered",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 111,
            "contract": "contracts/Gamble.sol:Gamble",
            "label": "result",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}