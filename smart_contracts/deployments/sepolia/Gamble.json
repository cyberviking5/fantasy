{
  "address": "0xE561d4D8fD2dFdc1f069B8596A47049ef1e9A1d4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_entryFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserEntered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserLost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserWon",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "enter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gamblers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "gamblersToAmountBet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserEntryStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settleTeamResultLoss",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settleTeamResultWon",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "hasEntered",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xfcfd25bc4ded89b13078ee263ec93421b9d3b58cd914dd1454d33496434df138",
  "receipt": {
    "to": null,
    "from": "0xc3c00e57421D8A75dadbD7b1469B94F44f4d6588",
    "contractAddress": "0xE561d4D8fD2dFdc1f069B8596A47049ef1e9A1d4",
    "transactionIndex": 111,
    "gasUsed": "874265",
    "logsBloom": "0x
    "blockHash": "0x8a7a728789c7d5bfbefd1fdcb6729a485fcc0155ee9c159a40b17946adf00a36",
    "transactionHash": "0xfcfd25bc4ded89b13078ee263ec93421b9d3b58cd914dd1454d33496434df138",
    "logs": [],
    "blockNumber": 4117290,
    "cumulativeGasUsed": "17210280",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "1000000000000000000"
  ],
  "numDeployments": 12,
  "solcInputHash": "06befbffc941aec2c7d91c46f33eb341",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_entryFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserLost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserWon\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gamblers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gamblersToAmountBet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserEntryStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleTeamResultLoss\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleTeamResultWon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasEntered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gamble.sol\":\"Gamble\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Gamble.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract Gamble {\\n    address private immutable owner;\\n    uint256 public immutable entryFee;\\n    // enum MatchStatus {\\n    //     NotStarted,\\n    //     Started,\\n    //     Completed\\n    // }\\n    // MatchStatus private matchStatus;\\n\\n    struct User {\\n        bool hasEntered;\\n    }\\n\\n    mapping(address => User) public users;\\n    mapping(address => uint256) public gamblersToAmountBet;\\n    address[] public gamblers;\\n\\n    event UserEntered(address user, uint256 amount);\\n    event UserWon(address user, uint256 amount);\\n    event UserLost(address user, uint256 amount);\\n\\n    constructor(uint256 _entryFee) {\\n        owner = msg.sender;\\n        entryFee = _entryFee;\\n        // matchStatus = MatchStatus.NotStarted;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only the owner can call this function\\\");\\n        _;\\n    }\\n\\n    // function setMatchStatus(address _user) private {\\n    //     if (users[_user].result == 1 || users[_user].result == 2) {\\n    //         matchStatus = MatchStatus.Completed;\\n    //     } else {\\n    //         matchStatus = MatchStatus.Started;\\n    //     }\\n    // }\\n\\n    // function setResultStatusWon(address user ) public{\\n    //         users[user].result=1;\\n    // }\\n\\n    // function setResultStatusLost(address user ) public{\\n    //         users[user].result=0;\\n    // }\\n    // function setResultStatusLive(address user ) public{\\n    //         users[user].result=2;\\n    // }\\n\\n    function enter() public payable {\\n        require(msg.value >= entryFee/10**18, \\\"Insufficient entry fee\\\");\\n        // require(matchStatus == MatchStatus.NotStarted , \\\"Match already started\\\");\\n        require(!users[msg.sender].hasEntered, \\\"You have already entered\\\");\\n\\n        gamblersToAmountBet[msg.sender] = msg.value;\\n        gamblers.push(msg.sender);\\n        users[msg.sender].hasEntered = true;\\n        emit UserEntered(msg.sender, msg.value);\\n    }\\n\\n    // function setMatchStatusNotStarted() public  {\\n    //     matchStatus = MatchStatus.NotStarted;\\n    // }\\n\\n    // function setMatchStatusStarted() public  {\\n    //     matchStatus = MatchStatus.Started;\\n    // }\\n\\n    // function setMatchStatusCompleted() public  {\\n    //     matchStatus = MatchStatus.Completed;\\n    // }\\n\\n    function settleTeamResultWon() public {\\n                 require(users[msg.sender].hasEntered, \\\"User has not entered\\\");\\n                 uint256 winnings = entryFee +\\n                 (gamblersToAmountBet[msg.sender] / gamblers.length);\\n                 payable(msg.sender).transfer(winnings);\\n                 users[msg.sender].hasEntered=false;\\n                 emit UserWon(msg.sender, winnings);\\n       \\n    }\\n\\n    function settleTeamResultLoss() public {\\n             require(users[msg.sender].hasEntered, \\\"User has not entered\\\");\\n             uint256 lossAmount = entryFee;\\n             users[msg.sender].hasEntered=false;\\n             emit UserLost(msg.sender, lossAmount);\\n    }\\n\\n\\n    function withdraw() public onlyOwner {\\n        payable(owner).transfer(address(this).balance);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return owner;\\n    }\\n\\n    function getEntryFee() public view returns (uint256) {\\n        return entryFee;\\n    }\\n\\n    // function getMatchStatus() public view returns (MatchStatus) {\\n    //     return matchStatus;\\n    // }\\n\\n    function getUserEntryStatus(address user) public view returns (bool) {\\n        return users[user].hasEntered;\\n    }\\n\\n    // function getUserResult(address user) public view returns (uint256) {\\n    //     return users[user].result;\\n    // }\\n\\n    function getBalance() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n}\\n\",\"keccak256\":\"0x2debe4d6924f0ea21d7981136e72e4606509484ca69978754313ea0e4591a3b4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c80637a53326f116100645780637a53326f146101aa578063893d20e8146101e7578063a87430ba14610212578063e586a4f01461024f578063e97dcb621461027a578063fc079c2714610284576100a7565b8063072ea61c146100ac57806312065fe0146100d75780632aaf9c66146101025780632d9f7a081461013f5780633ccfd60b1461017c578063608ca7cf14610193575b600080fd5b3480156100b857600080fd5b506100c161029b565b6040516100ce9190610a75565b60405180910390f35b3480156100e357600080fd5b506100ec6102bf565b6040516100f99190610a75565b60405180910390f35b34801561010e57600080fd5b5061012960048036038101906101249190610ac1565b6102c7565b6040516101369190610b2f565b60405180910390f35b34801561014b57600080fd5b5061016660048036038101906101619190610b76565b610306565b6040516101739190610a75565b60405180910390f35b34801561018857600080fd5b5061019161031e565b005b34801561019f57600080fd5b506101a8610415565b005b3480156101b657600080fd5b506101d160048036038101906101cc9190610b76565b61055e565b6040516101de9190610bbe565b60405180910390f35b3480156101f357600080fd5b506101fc6105b6565b6040516102099190610b2f565b60405180910390f35b34801561021e57600080fd5b5061023960048036038101906102349190610b76565b6105de565b6040516102469190610bbe565b60405180910390f35b34801561025b57600080fd5b50610264610609565b6040516102719190610a75565b60405180910390f35b610282610631565b005b34801561029057600080fd5b50610299610872565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b600047905090565b600281815481106102d757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a390610c5c565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610412573d6000803e3d6000fd5b50565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a90610cc8565b60405180910390fd5b60007f0000000000000000000000000000000000000000000000000000000000000000905060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507f1314fbd9b3f625c600265ea995805937eb1f31ad6be05ea00a535eca47c000683382604051610553929190610ce8565b60405180910390a150565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b670de0b6b3a76400007f00000000000000000000000000000000000000000000000000000000000000006106659190610d6f565b3410156106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e90610dec565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615610736576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072d90610e58565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507fb662f0beeb38e2aa790755858e25ee4edac93ec1ed278a0d1d28f86721a646b33334604051610868929190610ce8565b60405180910390a1565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610900576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f790610cc8565b60405180910390fd5b6000600280549050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109529190610d6f565b7f000000000000000000000000000000000000000000000000000000000000000061097d9190610e78565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156109c5573d6000803e3d6000fd5b5060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507f2dc4fba839a9fe8e3b5e9d22ce43d01c6a4445ed0d08a40f010bacb02a9774733382604051610a51929190610ce8565b60405180910390a150565b6000819050919050565b610a6f81610a5c565b82525050565b6000602082019050610a8a6000830184610a66565b92915050565b600080fd5b610a9e81610a5c565b8114610aa957600080fd5b50565b600081359050610abb81610a95565b92915050565b600060208284031215610ad757610ad6610a90565b5b6000610ae584828501610aac565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1982610aee565b9050919050565b610b2981610b0e565b82525050565b6000602082019050610b446000830184610b20565b92915050565b610b5381610b0e565b8114610b5e57600080fd5b50565b600081359050610b7081610b4a565b92915050565b600060208284031215610b8c57610b8b610a90565b5b6000610b9a84828501610b61565b91505092915050565b60008115159050919050565b610bb881610ba3565b82525050565b6000602082019050610bd36000830184610baf565b92915050565b600082825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b6000610c46602583610bd9565b9150610c5182610bea565b604082019050919050565b60006020820190508181036000830152610c7581610c39565b9050919050565b7f5573657220686173206e6f7420656e7465726564000000000000000000000000600082015250565b6000610cb2601483610bd9565b9150610cbd82610c7c565b602082019050919050565b60006020820190508181036000830152610ce181610ca5565b9050919050565b6000604082019050610cfd6000830185610b20565b610d0a6020830184610a66565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d7a82610a5c565b9150610d8583610a5c565b925082610d9557610d94610d11565b5b828204905092915050565b7f496e73756666696369656e7420656e7472792066656500000000000000000000600082015250565b6000610dd6601683610bd9565b9150610de182610da0565b602082019050919050565b60006020820190508181036000830152610e0581610dc9565b9050919050565b7f596f75206861766520616c726561647920656e74657265640000000000000000600082015250565b6000610e42601883610bd9565b9150610e4d82610e0c565b602082019050919050565b60006020820190508181036000830152610e7181610e35565b9050919050565b6000610e8382610a5c565b9150610e8e83610a5c565b9250828201905080821115610ea657610ea5610d40565b5b9291505056fea2646970667358221220c96d8fe9cfa8adce112a4cad1bbfb9295c5c0760ed02bbc75e52032f673f836a64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 13,
        "contract": "contracts/Gamble.sol:Gamble",
        "label": "users",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(User)8_storage)"
      },
      {
        "astId": 17,
        "contract": "contracts/Gamble.sol:Gamble",
        "label": "gamblersToAmountBet",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 20,
        "contract": "contracts/Gamble.sol:Gamble",
        "label": "gamblers",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(User)8_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Gamble.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)8_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(User)8_storage": {
        "encoding": "inplace",
        "label": "struct Gamble.User",
        "members": [
          {
            "astId": 7,
            "contract": "contracts/Gamble.sol:Gamble",
            "label": "hasEntered",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}